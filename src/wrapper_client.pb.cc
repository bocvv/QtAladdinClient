// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wrapper_client.proto

#include "wrapper_client.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_wrapper_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StudyStatusNum_wrapper_5fclient_2eproto;
namespace mediapipe {
class StudyStatusNumDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StudyStatusNum> _instance;
} _StudyStatusNum_default_instance_;
class WrapperClientDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WrapperClient> _instance;
} _WrapperClient_default_instance_;
}  // namespace mediapipe
static void InitDefaultsscc_info_StudyStatusNum_wrapper_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mediapipe::_StudyStatusNum_default_instance_;
    new (ptr) ::mediapipe::StudyStatusNum();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mediapipe::StudyStatusNum::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StudyStatusNum_wrapper_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StudyStatusNum_wrapper_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_WrapperClient_wrapper_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mediapipe::_WrapperClient_default_instance_;
    new (ptr) ::mediapipe::WrapperClient();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mediapipe::WrapperClient::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WrapperClient_wrapper_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_WrapperClient_wrapper_5fclient_2eproto}, {
      &scc_info_StudyStatusNum_wrapper_5fclient_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_wrapper_5fclient_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_wrapper_5fclient_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_wrapper_5fclient_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_wrapper_5fclient_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::mediapipe::StudyStatusNum, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::StudyStatusNum, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mediapipe::StudyStatusNum, play_phone_num_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::StudyStatusNum, look_lamp_num_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::StudyStatusNum, look_monitor_num_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::StudyStatusNum, look_book_num_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::StudyStatusNum, look_other_num_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::StudyStatusNum, look_none_num_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::StudyStatusNum, total_frames_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::mediapipe::WrapperClient, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::WrapperClient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mediapipe::WrapperClient, bad_pose_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::WrapperClient, low_attention_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::WrapperClient, use_phone_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::WrapperClient, study_status_num_),
  1,
  2,
  3,
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, sizeof(::mediapipe::StudyStatusNum)},
  { 19, 28, sizeof(::mediapipe::WrapperClient)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mediapipe::_StudyStatusNum_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mediapipe::_WrapperClient_default_instance_),
};

const char descriptor_table_protodef_wrapper_5fclient_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024wrapper_client.proto\022\tmediapipe\"\265\001\n\016St"
  "udyStatusNum\022\026\n\016play_phone_num\030\001 \002(\003\022\025\n\r"
  "look_lamp_num\030\002 \002(\003\022\030\n\020look_monitor_num\030"
  "\003 \002(\003\022\025\n\rlook_book_num\030\004 \002(\003\022\026\n\016look_oth"
  "er_num\030\005 \002(\003\022\025\n\rlook_none_num\030\006 \002(\003\022\024\n\014t"
  "otal_frames\030\007 \002(\003\"\200\001\n\rWrapperClient\022\020\n\010b"
  "ad_pose\030\001 \001(\010\022\025\n\rlow_attention\030\002 \001(\010\022\021\n\t"
  "use_phone\030\003 \001(\010\0223\n\020study_status_num\030\004 \002("
  "\0132\031.mediapipe.StudyStatusNumB5\n\"com.goog"
  "le.mediapipe.formats.protoB\017ClientDataPr"
  "oto"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_wrapper_5fclient_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_wrapper_5fclient_2eproto_sccs[2] = {
  &scc_info_StudyStatusNum_wrapper_5fclient_2eproto.base,
  &scc_info_WrapperClient_wrapper_5fclient_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_wrapper_5fclient_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_wrapper_5fclient_2eproto = {
  false, false, descriptor_table_protodef_wrapper_5fclient_2eproto, "wrapper_client.proto", 403,
  &descriptor_table_wrapper_5fclient_2eproto_once, descriptor_table_wrapper_5fclient_2eproto_sccs, descriptor_table_wrapper_5fclient_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_wrapper_5fclient_2eproto::offsets,
  file_level_metadata_wrapper_5fclient_2eproto, 2, file_level_enum_descriptors_wrapper_5fclient_2eproto, file_level_service_descriptors_wrapper_5fclient_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_wrapper_5fclient_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_wrapper_5fclient_2eproto)), true);
namespace mediapipe {

// ===================================================================

void StudyStatusNum::InitAsDefaultInstance() {
}
class StudyStatusNum::_Internal {
 public:
  using HasBits = decltype(std::declval<StudyStatusNum>()._has_bits_);
  static void set_has_play_phone_num(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_look_lamp_num(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_look_monitor_num(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_look_book_num(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_look_other_num(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_look_none_num(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_total_frames(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000007f) ^ 0x0000007f) != 0;
  }
};

StudyStatusNum::StudyStatusNum(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mediapipe.StudyStatusNum)
}
StudyStatusNum::StudyStatusNum(const StudyStatusNum& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&play_phone_num_, &from.play_phone_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_frames_) -
    reinterpret_cast<char*>(&play_phone_num_)) + sizeof(total_frames_));
  // @@protoc_insertion_point(copy_constructor:mediapipe.StudyStatusNum)
}

void StudyStatusNum::SharedCtor() {
  ::memset(&play_phone_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_frames_) -
      reinterpret_cast<char*>(&play_phone_num_)) + sizeof(total_frames_));
}

StudyStatusNum::~StudyStatusNum() {
  // @@protoc_insertion_point(destructor:mediapipe.StudyStatusNum)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StudyStatusNum::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StudyStatusNum::ArenaDtor(void* object) {
  StudyStatusNum* _this = reinterpret_cast< StudyStatusNum* >(object);
  (void)_this;
}
void StudyStatusNum::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StudyStatusNum::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StudyStatusNum& StudyStatusNum::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StudyStatusNum_wrapper_5fclient_2eproto.base);
  return *internal_default_instance();
}


void StudyStatusNum::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.StudyStatusNum)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    ::memset(&play_phone_num_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&total_frames_) -
        reinterpret_cast<char*>(&play_phone_num_)) + sizeof(total_frames_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StudyStatusNum::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required int64 play_phone_num = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_play_phone_num(&has_bits);
          play_phone_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 look_lamp_num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_look_lamp_num(&has_bits);
          look_lamp_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 look_monitor_num = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_look_monitor_num(&has_bits);
          look_monitor_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 look_book_num = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_look_book_num(&has_bits);
          look_book_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 look_other_num = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_look_other_num(&has_bits);
          look_other_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 look_none_num = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_look_none_num(&has_bits);
          look_none_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 total_frames = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_total_frames(&has_bits);
          total_frames_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StudyStatusNum::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mediapipe.StudyStatusNum)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 play_phone_num = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_play_phone_num(), target);
  }

  // required int64 look_lamp_num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_look_lamp_num(), target);
  }

  // required int64 look_monitor_num = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_look_monitor_num(), target);
  }

  // required int64 look_book_num = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_look_book_num(), target);
  }

  // required int64 look_other_num = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_look_other_num(), target);
  }

  // required int64 look_none_num = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_look_none_num(), target);
  }

  // required int64 total_frames = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->_internal_total_frames(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mediapipe.StudyStatusNum)
  return target;
}

size_t StudyStatusNum::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:mediapipe.StudyStatusNum)
  size_t total_size = 0;

  if (_internal_has_play_phone_num()) {
    // required int64 play_phone_num = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_play_phone_num());
  }

  if (_internal_has_look_lamp_num()) {
    // required int64 look_lamp_num = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_look_lamp_num());
  }

  if (_internal_has_look_monitor_num()) {
    // required int64 look_monitor_num = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_look_monitor_num());
  }

  if (_internal_has_look_book_num()) {
    // required int64 look_book_num = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_look_book_num());
  }

  if (_internal_has_look_other_num()) {
    // required int64 look_other_num = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_look_other_num());
  }

  if (_internal_has_look_none_num()) {
    // required int64 look_none_num = 6;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_look_none_num());
  }

  if (_internal_has_total_frames()) {
    // required int64 total_frames = 7;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_total_frames());
  }

  return total_size;
}
size_t StudyStatusNum::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mediapipe.StudyStatusNum)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required int64 play_phone_num = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_play_phone_num());

    // required int64 look_lamp_num = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_look_lamp_num());

    // required int64 look_monitor_num = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_look_monitor_num());

    // required int64 look_book_num = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_look_book_num());

    // required int64 look_other_num = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_look_other_num());

    // required int64 look_none_num = 6;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_look_none_num());

    // required int64 total_frames = 7;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_total_frames());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StudyStatusNum::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mediapipe.StudyStatusNum)
  GOOGLE_DCHECK_NE(&from, this);
  const StudyStatusNum* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StudyStatusNum>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mediapipe.StudyStatusNum)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mediapipe.StudyStatusNum)
    MergeFrom(*source);
  }
}

void StudyStatusNum::MergeFrom(const StudyStatusNum& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.StudyStatusNum)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      play_phone_num_ = from.play_phone_num_;
    }
    if (cached_has_bits & 0x00000002u) {
      look_lamp_num_ = from.look_lamp_num_;
    }
    if (cached_has_bits & 0x00000004u) {
      look_monitor_num_ = from.look_monitor_num_;
    }
    if (cached_has_bits & 0x00000008u) {
      look_book_num_ = from.look_book_num_;
    }
    if (cached_has_bits & 0x00000010u) {
      look_other_num_ = from.look_other_num_;
    }
    if (cached_has_bits & 0x00000020u) {
      look_none_num_ = from.look_none_num_;
    }
    if (cached_has_bits & 0x00000040u) {
      total_frames_ = from.total_frames_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StudyStatusNum::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mediapipe.StudyStatusNum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StudyStatusNum::CopyFrom(const StudyStatusNum& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.StudyStatusNum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StudyStatusNum::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void StudyStatusNum::InternalSwap(StudyStatusNum* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StudyStatusNum, total_frames_)
      + sizeof(StudyStatusNum::total_frames_)
      - PROTOBUF_FIELD_OFFSET(StudyStatusNum, play_phone_num_)>(
          reinterpret_cast<char*>(&play_phone_num_),
          reinterpret_cast<char*>(&other->play_phone_num_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StudyStatusNum::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WrapperClient::InitAsDefaultInstance() {
  ::mediapipe::_WrapperClient_default_instance_._instance.get_mutable()->study_status_num_ = const_cast< ::mediapipe::StudyStatusNum*>(
      ::mediapipe::StudyStatusNum::internal_default_instance());
}
class WrapperClient::_Internal {
 public:
  using HasBits = decltype(std::declval<WrapperClient>()._has_bits_);
  static void set_has_bad_pose(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_low_attention(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_use_phone(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::mediapipe::StudyStatusNum& study_status_num(const WrapperClient* msg);
  static void set_has_study_status_num(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::mediapipe::StudyStatusNum&
WrapperClient::_Internal::study_status_num(const WrapperClient* msg) {
  return *msg->study_status_num_;
}
WrapperClient::WrapperClient(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mediapipe.WrapperClient)
}
WrapperClient::WrapperClient(const WrapperClient& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_study_status_num()) {
    study_status_num_ = new ::mediapipe::StudyStatusNum(*from.study_status_num_);
  } else {
    study_status_num_ = nullptr;
  }
  ::memcpy(&bad_pose_, &from.bad_pose_,
    static_cast<size_t>(reinterpret_cast<char*>(&use_phone_) -
    reinterpret_cast<char*>(&bad_pose_)) + sizeof(use_phone_));
  // @@protoc_insertion_point(copy_constructor:mediapipe.WrapperClient)
}

void WrapperClient::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WrapperClient_wrapper_5fclient_2eproto.base);
  ::memset(&study_status_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_phone_) -
      reinterpret_cast<char*>(&study_status_num_)) + sizeof(use_phone_));
}

WrapperClient::~WrapperClient() {
  // @@protoc_insertion_point(destructor:mediapipe.WrapperClient)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WrapperClient::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete study_status_num_;
}

void WrapperClient::ArenaDtor(void* object) {
  WrapperClient* _this = reinterpret_cast< WrapperClient* >(object);
  (void)_this;
}
void WrapperClient::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WrapperClient::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WrapperClient& WrapperClient::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WrapperClient_wrapper_5fclient_2eproto.base);
  return *internal_default_instance();
}


void WrapperClient::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.WrapperClient)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(study_status_num_ != nullptr);
    study_status_num_->Clear();
  }
  ::memset(&bad_pose_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_phone_) -
      reinterpret_cast<char*>(&bad_pose_)) + sizeof(use_phone_));
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WrapperClient::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool bad_pose = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_bad_pose(&has_bits);
          bad_pose_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool low_attention = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_low_attention(&has_bits);
          low_attention_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool use_phone = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_use_phone(&has_bits);
          use_phone_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required .mediapipe.StudyStatusNum study_status_num = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_study_status_num(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WrapperClient::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mediapipe.WrapperClient)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bad_pose = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_bad_pose(), target);
  }

  // optional bool low_attention = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_low_attention(), target);
  }

  // optional bool use_phone = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_use_phone(), target);
  }

  // required .mediapipe.StudyStatusNum study_status_num = 4;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::study_status_num(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mediapipe.WrapperClient)
  return target;
}

size_t WrapperClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mediapipe.WrapperClient)
  size_t total_size = 0;

  // required .mediapipe.StudyStatusNum study_status_num = 4;
  if (_internal_has_study_status_num()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *study_status_num_);
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000eu) {
    // optional bool bad_pose = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool low_attention = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool use_phone = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WrapperClient::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mediapipe.WrapperClient)
  GOOGLE_DCHECK_NE(&from, this);
  const WrapperClient* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WrapperClient>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mediapipe.WrapperClient)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mediapipe.WrapperClient)
    MergeFrom(*source);
  }
}

void WrapperClient::MergeFrom(const WrapperClient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.WrapperClient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_study_status_num()->::mediapipe::StudyStatusNum::MergeFrom(from._internal_study_status_num());
    }
    if (cached_has_bits & 0x00000002u) {
      bad_pose_ = from.bad_pose_;
    }
    if (cached_has_bits & 0x00000004u) {
      low_attention_ = from.low_attention_;
    }
    if (cached_has_bits & 0x00000008u) {
      use_phone_ = from.use_phone_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WrapperClient::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mediapipe.WrapperClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WrapperClient::CopyFrom(const WrapperClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.WrapperClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WrapperClient::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_study_status_num()) {
    if (!study_status_num_->IsInitialized()) return false;
  }
  return true;
}

void WrapperClient::InternalSwap(WrapperClient* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WrapperClient, use_phone_)
      + sizeof(WrapperClient::use_phone_)
      - PROTOBUF_FIELD_OFFSET(WrapperClient, study_status_num_)>(
          reinterpret_cast<char*>(&study_status_num_),
          reinterpret_cast<char*>(&other->study_status_num_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WrapperClient::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace mediapipe
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mediapipe::StudyStatusNum* Arena::CreateMaybeMessage< ::mediapipe::StudyStatusNum >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mediapipe::StudyStatusNum >(arena);
}
template<> PROTOBUF_NOINLINE ::mediapipe::WrapperClient* Arena::CreateMaybeMessage< ::mediapipe::WrapperClient >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mediapipe::WrapperClient >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
